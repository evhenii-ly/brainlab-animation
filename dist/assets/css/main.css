/*====
 BREAKPOINTS
 ====*/
@font-face {
  font-family: "Neutral Face";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/neutral-face/NeutralFace.ttf") format("truetype"), url("../fonts/neutral-face/NeutralFace.woff") format("woff"), url("../fonts/neutral-face/NeutralFace.woff2") format("woff2");
}
@font-face {
  font-family: "Neutral Face";
  font-style: normal;
  font-weight: 700;
  src: url("../fonts/neutral-face/NeutralFaceBold.ttf") format("truetype"), url("../fonts/neutral-face/NeutralFaceBold.woff") format("woff"), url("../fonts/neutral-face/NeutralFaceBold.woff2") format("woff2");
}
@-webkit-keyframes moveDownSecondRow {
  from {
    -webkit-transform: translate(var(--move-x-end), 0) rotate(90deg) scaleY(-1);
            transform: translate(var(--move-x-end), 0) rotate(90deg) scaleY(-1);
  }
  to {
    -webkit-transform: translate(var(--move-x-end), var(--move-y-second-row)) rotate(90deg) scaleY(-1);
            transform: translate(var(--move-x-end), var(--move-y-second-row)) rotate(90deg) scaleY(-1);
  }
}
@keyframes moveDownSecondRow {
  from {
    -webkit-transform: translate(var(--move-x-end), 0) rotate(90deg) scaleY(-1);
            transform: translate(var(--move-x-end), 0) rotate(90deg) scaleY(-1);
  }
  to {
    -webkit-transform: translate(var(--move-x-end), var(--move-y-second-row)) rotate(90deg) scaleY(-1);
            transform: translate(var(--move-x-end), var(--move-y-second-row)) rotate(90deg) scaleY(-1);
  }
}
@-webkit-keyframes moveDownThirdRow {
  from {
    -webkit-transform: translate(0, var(--move-y-second-row)) rotate(90deg);
            transform: translate(0, var(--move-y-second-row)) rotate(90deg);
  }
  to {
    -webkit-transform: translate(0, var(--move-y-third-row)) rotate(90deg);
            transform: translate(0, var(--move-y-third-row)) rotate(90deg);
  }
}
@keyframes moveDownThirdRow {
  from {
    -webkit-transform: translate(0, var(--move-y-second-row)) rotate(90deg);
            transform: translate(0, var(--move-y-second-row)) rotate(90deg);
  }
  to {
    -webkit-transform: translate(0, var(--move-y-third-row)) rotate(90deg);
            transform: translate(0, var(--move-y-third-row)) rotate(90deg);
  }
}
@-webkit-keyframes moveRight {
  from {
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0);
  }
  to {
    -webkit-transform: translate(var(--move-x-end), 0);
            transform: translate(var(--move-x-end), 0);
  }
}
@keyframes moveRight {
  from {
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0);
  }
  to {
    -webkit-transform: translate(var(--move-x-end), 0);
            transform: translate(var(--move-x-end), 0);
  }
}
@-webkit-keyframes moveRightReverse {
  from {
    -webkit-transform: translate(var(--move-x-end), var(--move-y-second-row)) rotate(0) scaleX(-1);
            transform: translate(var(--move-x-end), var(--move-y-second-row)) rotate(0) scaleX(-1);
  }
  to {
    -webkit-transform: translate(0, var(--move-y-second-row)) scaleX(-1);
            transform: translate(0, var(--move-y-second-row)) scaleX(-1);
  }
}
@keyframes moveRightReverse {
  from {
    -webkit-transform: translate(var(--move-x-end), var(--move-y-second-row)) rotate(0) scaleX(-1);
            transform: translate(var(--move-x-end), var(--move-y-second-row)) rotate(0) scaleX(-1);
  }
  to {
    -webkit-transform: translate(0, var(--move-y-second-row)) scaleX(-1);
            transform: translate(0, var(--move-y-second-row)) scaleX(-1);
  }
}
@-webkit-keyframes moveRight-1 {
  from {
    -webkit-transform: translate(0, var(--move-y-third-row));
            transform: translate(0, var(--move-y-third-row));
  }
  to {
    -webkit-transform: translate(var(--move-x-end-1), var(--move-y-third-row));
            transform: translate(var(--move-x-end-1), var(--move-y-third-row));
  }
}
@keyframes moveRight-1 {
  from {
    -webkit-transform: translate(0, var(--move-y-third-row));
            transform: translate(0, var(--move-y-third-row));
  }
  to {
    -webkit-transform: translate(var(--move-x-end-1), var(--move-y-third-row));
            transform: translate(var(--move-x-end-1), var(--move-y-third-row));
  }
}
@-webkit-keyframes hide {
  from {
    visibility: visible;
  }
  to {
    visibility: hidden;
  }
}
@keyframes hide {
  from {
    visibility: visible;
  }
  to {
    visibility: hidden;
  }
}
@-webkit-keyframes mouthTop {
  from {
    -webkit-transform: rotate(-25deg);
            transform: rotate(-25deg);
  }
  to {
    -webkit-transform: rotate(0);
            transform: rotate(0);
  }
}
@keyframes mouthTop {
  from {
    -webkit-transform: rotate(-25deg);
            transform: rotate(-25deg);
  }
  to {
    -webkit-transform: rotate(0);
            transform: rotate(0);
  }
}
@-webkit-keyframes mouthBottom {
  from {
    -webkit-transform: rotate(5deg);
            transform: rotate(5deg);
  }
  to {
    -webkit-transform: rotate(-5deg);
            transform: rotate(-5deg);
  }
}
@keyframes mouthBottom {
  from {
    -webkit-transform: rotate(5deg);
            transform: rotate(5deg);
  }
  to {
    -webkit-transform: rotate(-5deg);
            transform: rotate(-5deg);
  }
}
@-webkit-keyframes wiggling1 {
  0%, 100% {
    -webkit-transform: rotate(5deg);
            transform: rotate(5deg);
  }
  50% {
    -webkit-transform: rotate(-5deg);
            transform: rotate(-5deg);
  }
}
@keyframes wiggling1 {
  0%, 100% {
    -webkit-transform: rotate(5deg);
            transform: rotate(5deg);
  }
  50% {
    -webkit-transform: rotate(-5deg);
            transform: rotate(-5deg);
  }
}
@-webkit-keyframes wiggling2 {
  0%, 100% {
    -webkit-transform: rotate(-5deg);
            transform: rotate(-5deg);
  }
  50% {
    -webkit-transform: rotate(5deg);
            transform: rotate(5deg);
  }
}
@keyframes wiggling2 {
  0%, 100% {
    -webkit-transform: rotate(-5deg);
            transform: rotate(-5deg);
  }
  50% {
    -webkit-transform: rotate(5deg);
            transform: rotate(5deg);
  }
}
@-webkit-keyframes slideInEffect {
  0% {
    opacity: 0;
    visibility: hidden;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
  100% {
    opacity: 1;
    visibility: visible;
    -webkit-transform: translateY(-30%);
            transform: translateY(-30%);
  }
}
@keyframes slideInEffect {
  0% {
    opacity: 0;
    visibility: hidden;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
  100% {
    opacity: 1;
    visibility: visible;
    -webkit-transform: translateY(-30%);
            transform: translateY(-30%);
  }
}
*,
*::before, *:after,
::before,
*::after,
::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: transparent;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  text-align: left;
  background-color: #fff;
}

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
}

address {
  font-style: normal;
}

p {
  margin-top: 0;
  margin-bottom: 0;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 0;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

b,
strong {
  font-weight: bolder;
}

small {
  font-size: 80%;
}

a {
  text-decoration: none;
  background-color: transparent;
  color: #fff;
  -webkit-text-decoration-skip: objects;
  cursor: pointer;
}

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

a,
area,
button,
[role=button],
input:not([type=range]),
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}

label {
  display: inline-block;
  margin-bottom: 0.5rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  cursor: pointer;
}

fieldset {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  margin: 0;
  padding: 0;
  border: none;
}

button {
  padding: 0;
  background: none;
  border: none;
  cursor: pointer;
}

button:focus {
  outline: none;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  outline: none;
}

input:focus {
  outline: none;
}
input:-webkit-autofill, input:-webkit-autofill:hover, input:-webkit-autofill:focus {
  -webkit-text-fill-color: #fff;
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input[type=radio],
input[type=checkbox] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
}

input[type=date],
input[type=time],
input[type=datetime-local],
input[type=month] {
  -webkit-appearance: listbox;
}

textarea {
  overflow: auto;
  resize: none;
}

[hidden] {
  display: none !important;
}

ul {
  padding-left: 0;
  list-style: none;
}

:root {
  --scrollWidth: 0px;
  --containerIndentX: 3.75rem;
}
@media only screen and (max-width: 1199px) {
  :root {
    --containerIndentX: 1.875rem;
  }
}
@media only screen and (max-width: 767px) {
  :root {
    --containerIndentX: 0.3125rem;
  }
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 1rem;
  height: 100%;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}
body {
  -webkit-font-smoothing: antialiased;
  color: rgba(30, 30, 30, 0.8);
  font: 16px/1.625rem "Nunito", sans-serif;
  height: 100%;
  overflow-x: hidden;
  text-rendering: optimizeLegibility;
}

body.preload *, body.preload *:before, body.preload *:after {
  -webkit-animation-duration: 0s !important;
          animation-duration: 0s !important;
  -webkit-transition: background-color 0s, opacity 0s, color 0s, width 0s, height 0s, padding 0s, margin 0s !important;
  -o-transition: background-color 0s, opacity 0s, color 0s, width 0s, height 0s, padding 0s, margin 0s !important;
  transition: background-color 0s, opacity 0s, color 0s, width 0s, height 0s, padding 0s, margin 0s !important;
}

::-moz-selection {
  color: #fff;
  background-color: rgba(35, 75, 11, 0.9);
}

::selection {
  color: #fff;
  background-color: rgba(35, 75, 11, 0.9);
}

.h4, h4 {
  font-size: 1.25rem;
}

.h3, h3 {
  font-size: 1.5625rem;
}

.h2, h2 {
  font-size: 1.953125rem;
}

.h1, h1 {
  font-size: 2.44140625rem;
}

a {
  background: transparent;
  color: inherit;
  text-decoration: none;
  -webkit-transition: color 0.2s;
  -o-transition: color 0.2s;
  transition: color 0.2s;
}
a:hover, a.active, a.current-menu-item {
  color: #234B0B;
  text-decoration: none;
}

p {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.625rem;
}

.app {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-height: 100%;
}

.animated {
  opacity: 0;
  -webkit-animation: slideInEffect 1s forwards;
          animation: slideInEffect 1s forwards;
}

.button {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  min-height: 4.125rem;
  padding: 0.9375rem 2.5rem;
  text-align: center;
  font-size: 1.5rem;
  line-height: 2.25rem;
  border: 0.0625rem solid transparent;
  border-radius: 61px;
  cursor: pointer;
  -webkit-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s;
}
.button[disabled] {
  cursor: default;
  opacity: 0.6;
}
@media only screen and (max-width: 991px) {
  .button {
    min-height: 2.75rem;
    padding: 0.625rem 0.3125rem;
    font-size: 1rem;
    line-height: 1.5rem;
  }
}

.button--primary {
  color: #fff;
  background-color: #234B0B;
  border-color: #234B0B;
}
.button--primary:not([disabled]):hover {
  background-color: #53575D;
  border-color: #53575D;
}

.button--secondary {
  color: #272727;
  background-color: #fff;
}
.button--secondary:hover {
  color: #fff;
  background-color: #234B0B;
}

.button--ghost {
  color: rgba(30, 30, 30, 0.8);
  border-color: #234B0B;
}
.button--ghost:hover {
  background-color: #B7EB98;
}
.button--ghost:focus, .button--ghost:active {
  color: #fff;
  background-color: #234B0B;
}

.button--ghost-primary {
  color: rgba(30, 30, 30, 0.8);
  background-color: #F5FFEE;
  border-color: #234B0B;
}
.button--ghost-primary:hover {
  background-color: #B7EB98;
}
.button--ghost-primary:focus, .button--ghost-primary:active {
  color: #fff;
  background-color: #234B0B;
}

.container {
  width: 100%;
  max-width: 1920px;
  margin: 0 auto;
  padding: 0 var(--containerIndentX);
}

.heading--h1 {
  color: #234B0B;
  font-weight: 900;
  font-size: 3.375rem;
  line-height: 3.875rem;
  text-transform: uppercase;
  text-align: center;
}
@media only screen and (max-width: 991px) {
  .heading--h1 {
    font-size: 1.75rem;
    line-height: 1.9375rem;
    text-transform: none;
  }
}

:root {
  --scene-width: 29.0625rem;
  --scene-gap-x: 0.9375rem;
  --scene-gap-y: 0.625rem;
  --pacman-width: 4.0625rem;
  --pacman-height: 5.3125rem;
  --tree-width: 4.0625rem;
  --tree-height: 5.3125rem;
  --move-x-end: calc(var(--scene-width) - var(--pacman-width));
  --move-x-end-1: calc(var(--scene-width) - var(--pacman-width) * 2 - var(--scene-gap-x));
  --move-y-second-row: calc(var(--pacman-height) + var(--scene-gap-y));
  --move-y-third-row: calc((var(--pacman-height) + var(--scene-gap-y)) * 2);
}
@media only screen and (max-width: 1199px) {
  :root {
    --scene-width: 21.125rem;
    --scene-gap-x: 0.625rem;
    --scene-gap-y: 0.5625rem;
    --pacman-width: 3rem;
    --pacman-height: 3.9375rem;
    --tree-width: 3rem;
    --tree-height: 3.9375rem;
  }
}

.pacman-scene {
  position: relative;
  display: grid;
  grid-template-columns: repeat(auto-fill, var(--tree-width));
  grid-gap: var(--scene-gap-y) var(--scene-gap-x);
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  max-width: var(--scene-width);
  width: 100%;
}
.pacman-scene__tree {
  height: var(--tree-height);
  background: url("../images/tree.png") no-repeat center center/100%;
}
@media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 2/1), (min-resolution: 192dpi) {
  .pacman-scene__tree {
    background-image: url("../images/tree-@2x.png");
  }
}
.pacman-scene__tree:not(:last-child) {
  -webkit-animation-name: hide;
          animation-name: hide;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
}
.pacman-scene__tree:nth-of-type(1) {
  -webkit-animation-duration: -0.4s;
          animation-duration: -0.4s;
}
.pacman-scene__tree:nth-of-type(2) {
  -webkit-animation-duration: 0.2s;
          animation-duration: 0.2s;
}
.pacman-scene__tree:nth-of-type(3) {
  -webkit-animation-duration: 0.8s;
          animation-duration: 0.8s;
}
.pacman-scene__tree:nth-of-type(4) {
  -webkit-animation-duration: 1.4s;
          animation-duration: 1.4s;
}
.pacman-scene__tree:nth-of-type(5) {
  -webkit-animation-duration: 2s;
          animation-duration: 2s;
}
.pacman-scene__tree:nth-of-type(6) {
  -webkit-animation-duration: 2.6s;
          animation-duration: 2.6s;
}
.pacman-scene__tree:nth-of-type(12) {
  -webkit-animation-duration: 3.2s;
          animation-duration: 3.2s;
}
.pacman-scene__tree:nth-of-type(11) {
  -webkit-animation-duration: 4.3s;
          animation-duration: 4.3s;
}
.pacman-scene__tree:nth-of-type(10) {
  -webkit-animation-duration: 4.9s;
          animation-duration: 4.9s;
}
.pacman-scene__tree:nth-of-type(9) {
  -webkit-animation-duration: 5.5s;
          animation-duration: 5.5s;
}
.pacman-scene__tree:nth-of-type(8) {
  -webkit-animation-duration: 6.1s;
          animation-duration: 6.1s;
}
.pacman-scene__tree:nth-of-type(7) {
  -webkit-animation-duration: 6.7s;
          animation-duration: 6.7s;
}
.pacman-scene__tree:nth-of-type(13) {
  -webkit-animation-duration: 7.3s;
          animation-duration: 7.3s;
}
.pacman-scene__tree:nth-of-type(14) {
  -webkit-animation-duration: 8.4s;
          animation-duration: 8.4s;
}
.pacman-scene__tree:nth-of-type(15) {
  -webkit-animation-duration: 9s;
          animation-duration: 9s;
}
.pacman-scene__tree:nth-of-type(16) {
  -webkit-animation-duration: 9.6s;
          animation-duration: 9.6s;
}
.pacman-scene__tree:nth-of-type(17) {
  -webkit-animation-duration: 10.2s;
          animation-duration: 10.2s;
}
.pacman-scene__pacman {
  position: relative;
  width: 4.8125rem;
  margin-left: -0.375rem;
  -webkit-animation-name: moveRight, moveDownSecondRow, moveRightReverse, moveDownThirdRow, moveRight-1;
          animation-name: moveRight, moveDownSecondRow, moveRightReverse, moveDownThirdRow, moveRight-1;
  -webkit-animation-duration: 3.06666667s, 1s, 3.06666667s, 1s, 2.5555555583s;
          animation-duration: 3.06666667s, 1s, 3.06666667s, 1s, 2.5555555583s;
  -webkit-animation-delay: 2s, 5.06666667s, 6.06666667s, 9.1333333399s, 10.1333333399s;
          animation-delay: 2s, 5.06666667s, 6.06666667s, 9.1333333399s, 10.1333333399s;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
}
.pacman-scene__pacman::before, .pacman-scene__pacman::after {
  content: "";
  position: absolute;
  left: 0;
  -webkit-transform-origin: center left;
      -ms-transform-origin: center left;
          transform-origin: center left;
  background-size: 100%;
  background-repeat: no-repeat;
}
.pacman-scene__pacman::before {
  top: 0.9375rem;
  left: 0.375rem;
  width: 3.5625rem;
  height: 2.3125rem;
  background-image: url("../images/pacman-top.png");
  -webkit-animation: mouthTop 0.4s infinite;
          animation: mouthTop 0.4s infinite;
}
@media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 2/1), (min-resolution: 192dpi) {
  .pacman-scene__pacman::before {
    background-image: url("../images/pacman-top-@2x.png");
  }
}
@media only screen and (max-width: 1199px) {
  .pacman-scene__pacman::before {
    width: 2.875rem;
  }
}
.pacman-scene__pacman::after {
  top: 1.75rem;
  width: 4.8125rem;
  height: 2.625rem;
  background-image: url("../images/pacman-bottom.png");
  -webkit-animation: mouthBottom 0.4s infinite;
          animation: mouthBottom 0.4s infinite;
}
@media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 2/1), (min-resolution: 192dpi) {
  .pacman-scene__pacman::after {
    background-image: url("../images/pacman-bottom-@2x.png");
  }
}
@media only screen and (max-width: 1199px) {
  .pacman-scene__pacman::after {
    width: 3.6875rem;
  }
}
@media only screen and (max-width: 1199px) {
  .pacman-scene__pacman {
    width: 3.6875rem;
  }
}

.leaves__branch1 g {
  -webkit-transform-origin: left top;
      -ms-transform-origin: left top;
          transform-origin: left top;
  -webkit-animation: wiggling1 10s ease-in-out forwards infinite;
          animation: wiggling1 10s ease-in-out forwards infinite;
}
.leaves__branch2 g {
  -webkit-transform-origin: left top;
      -ms-transform-origin: left top;
          transform-origin: left top;
  -webkit-animation: wiggling1 12s ease-in-out forwards infinite;
          animation: wiggling1 12s ease-in-out forwards infinite;
}
.leaves__branch3 g {
  -webkit-transform-origin: left top;
      -ms-transform-origin: left top;
          transform-origin: left top;
  -webkit-animation: wiggling2 10s ease-in-out forwards infinite;
          animation: wiggling2 10s ease-in-out forwards infinite;
}
.leaves__branch4 g {
  -webkit-transform-origin: bottom center;
      -ms-transform-origin: bottom center;
          transform-origin: bottom center;
  -webkit-animation: wiggling2 14s ease-in-out forwards infinite;
          animation: wiggling2 14s ease-in-out forwards infinite;
}

.plants-page {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 100%;
  overflow: hidden;
}
.plants-page__leaves {
  position: absolute;
  left: 0;
  bottom: 0;
  z-index: -1;
  -webkit-transform-origin: left bottom;
      -ms-transform-origin: left bottom;
          transform-origin: left bottom;
}
@media only screen and (max-width: 1441px) {
  .plants-page__leaves {
    -webkit-transform: scale(0.9);
        -ms-transform: scale(0.9);
            transform: scale(0.9);
  }
}
@media only screen and (max-width: 991px) {
  .plants-page__leaves {
    -webkit-transform: scale(0.6);
        -ms-transform: scale(0.6);
            transform: scale(0.6);
  }
}
.plants-page__leaves--mirrored {
  left: unset;
  right: 0;
  -webkit-transform: scaleX(-1) translateX(100%);
      -ms-transform: scaleX(-1) translateX(100%);
          transform: scaleX(-1) translateX(100%);
  -webkit-transform-origin: right bottom;
      -ms-transform-origin: right bottom;
          transform-origin: right bottom;
}
@media only screen and (max-width: 1441px) {
  .plants-page__leaves--mirrored {
    display: none;
  }
}
.plants-page__container {
  max-width: 82.125rem;
}
.plants-page__scene {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 388px;
}
.plants-page__buttons {
  position: absolute;
  top: 9.75rem;
  left: 50%;
  display: grid;
  grid-template-columns: repeat(3, 13.125rem);
  -webkit-column-gap: 3.125rem;
     -moz-column-gap: 3.125rem;
          column-gap: 3.125rem;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
}
@media only screen and (max-width: 991px) {
  .plants-page__buttons {
    grid-template-columns: repeat(3, 7.125rem);
    -webkit-column-gap: 0.5rem;
       -moz-column-gap: 0.5rem;
            column-gap: 0.5rem;
    top: 9.25rem;
  }
}
.plants-page__button:nth-of-type(1) {
  -webkit-animation-delay: 0.3s;
          animation-delay: 0.3s;
}
.plants-page__button:nth-of-type(2) {
  -webkit-animation-delay: 0.6s;
          animation-delay: 0.6s;
}
.plants-page__button:nth-of-type(3) {
  -webkit-animation-delay: 0.9s;
          animation-delay: 0.9s;
}

.pacman-page {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 100%;
}
.pacman-page__heading {
  margin-bottom: 6.75rem;
}
@media only screen and (max-width: 991px) {
  .pacman-page__heading {
    margin-bottom: 0.9375rem;
  }
}
.pacman-page__container {
  max-width: 62.5rem;
}
.pacman-page__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 0 auto;
}
@media only screen and (max-width: 991px) {
  .pacman-page__content {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse;
  }
}
.pacman-page__buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  width: 100%;
  max-width: 13.125rem;
  -webkit-animation-delay: 0.7s;
          animation-delay: 0.7s;
}
@media only screen and (max-width: 1199px) {
  .pacman-page__buttons {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    max-width: 100%;
  }
}
.pacman-page__button {
  margin-bottom: 1.875rem;
}
.pacman-page__button:last-child {
  margin-bottom: 0;
}
@media only screen and (max-width: 1199px) {
  .pacman-page__button {
    width: 100%;
    max-width: 7.125rem;
    margin-bottom: 0;
    margin-right: 0.5rem;
  }
  .pacman-page__button:last-child {
    margin-right: 0;
  }
}
.pacman-page__scene {
  -webkit-animation-delay: 0.5s;
          animation-delay: 0.5s;
}
@media only screen and (max-width: 1199px) {
  .pacman-page__scene {
    margin-bottom: 1.875rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
